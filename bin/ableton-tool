#!/usr/bin/env python
"""Ableton Tool

Usage:
  ableton-tool decompile-midi-remote-scripts [<dst>]
  ableton-tool (-h | --help)
  ableton-tool --version

Options:
  -h --help     Show this screen.
  --version     Show version.
"""

from docopt import docopt
import argparse
import shutil
import platform
import os
from uncompyle2 import uncompyle_file
from ableton import __version__

class CouldNotFindAppResourcesDirectory(Exception): pass

class UMad(Exception): pass

def get_ableton_resources_directory():
    possible_dirs = []

    if platform.system() == "Darwin":
        possible_dirs = [
            "/Applications/Ableton Live 9 Suite.app/Contents/App-Resources/"
        ]
    elif platform.system() == "Linux":
        print "U MAD? Ableton on linux?!"
        raise UMad
    elif platform.system() == "Windows":
        possible_dirs = [
            # XXX fill me in. I don't have winzoz..
        ]

    for d in possible_dirs:
        if os.path.isdir(d):
            return d
    raise CouldNotFindAppResourcesDirectory


def decompile_midi_remote_scripts(output_dir):
    midi_remote_dir = os.path.join(get_ableton_resources_directory(),
                                  "MIDI Remote Scripts")

    for root, dirs, files in os.walk(midi_remote_dir):
        path = root.split('/')
        for d in dirs:
            target_dir = os.path.join(output_dir, d)
            if not os.path.isdir(target_dir):
                os.makedirs(target_dir)

        for f in files:
            compiled_file_src = os.path.join(root, f)
            compiled_file_dst = os.path.join(output_dir,
                                             compiled_file_src.replace(midi_remote_dir + "/",
                                                                       ""))
            if f.endswith(".pyc"):
                compiled_file_dst = compiled_file_dst.replace(".pyc", ".py")
                print "Decompiling %s into %s" % (compiled_file_src, compiled_file_dst)
                outstream = open(compiled_file_dst, "w+")
                uncompyle_file(compiled_file_src, outstream)
                outstream.close()
            else:
                shutil.copyfile(compiled_file_src, compiled_file_dst)

if __name__ == '__main__':
    args = docopt(__doc__, version='Ableton Tool '+__version__)
    if args['decompile-midi-remote-scripts']:
        target_dir = "MIDI Remote Scripts"
        if args['<dst>']:
            target_dir = args['<dst>']
        decompile_midi_remote_scripts(target_dir)
